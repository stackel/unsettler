{"version":3,"sources":["components/Stack.jsx","components/App.jsx","App.js","serviceWorker.js","index.js"],"names":["NUM_CARDS_UNTIL_RESULT","Stack","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getNewVacations","getEducationRecommendation","ratings","state","thrownCards","filter","card","vacancy","jobId","map","thrownCard","concat","direction","Swing","DIRECTION","RIGHT","join","query","axios","post","then","response","educations","data","recommendedCourses","console","log","setState","education","error","_this$state","firstLoad","recommendedJobs","push","headline","companyName","stack","onThrowout","e","_this$state2","stackCopy","toConsumableArray","index","indexOf","target","id","splice","prevState","throwDirection","length","_this$state3","url","courseId","react_default","a","createElement","className","rel","href","react_swing_default","throwout","config","throwOutConfidence","xOffset","yOffset","element","xConfidence","Math","min","abs","offsetWidth","yConfidence","offsetHeight","max","key","role","aria-label","Component","App","Stack_Stack","react_router_dom","basename","process","react_router","path","exact","component","AppComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3383094.chunk.js","sourcesContent":["import React, { Component } from 'react';\n/* eslint-disable import/no-extraneous-dependencies */\n// import PropTypes from 'prop-types';\nimport Swing from 'react-swing';\nimport axios from 'axios';\n\nconst THROW_SENSITIVITY = 0.7;\nconst NUM_CARDS_UNTIL_RESULT = 20;\n\nexport default class Stack extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stack: [],\n      thrownCards: [],\n      firstLoad: true,\n      education: /* {\n        title: 'Byggteknik inriktning betongarbetare',\n        id: '115183',\n      } */ null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.getNewVacations();\n  }\n\n  getEducationRecommendation = () => {\n    const { thrownCards } = this.state;\n    const ratings = thrownCards.filter(card => card.vacancy.jobId !== 'WELCOME').map(thrownCard => (`{ jobId:\"${thrownCard.vacancy.jobId}\", rating:${thrownCard.direction === Swing.DIRECTION.RIGHT ? 'THUMBS_UP' : 'THUMBS_DOWN'}}`\n    )).join(',');\n    const query = `{ recommendedCourses(ratings:[${ratings}]) { courseId headline text}}`;\n    // const query = '{ recommendedCourses(ratings:[]) { courseId headline text}}';\n\n    axios.post('https://unsettler.azurewebsites.net/graphql', { query }).then((response) => {\n      const educations = response.data.data.recommendedCourses;\n      console.log(educations);\n      this.setState({\n        education: educations[0],\n      });\n    }, (error) => {\n      console.error(error);\n    });\n  }\n\n  getNewVacations = () => {\n    const { thrownCards, firstLoad } = this.state;\n\n    const ratings = thrownCards.filter(card => card.vacancy.jobId !== 'WELCOME').map(thrownCard => (`{ jobId:\"${thrownCard.vacancy.jobId}\", rating:${thrownCard.direction === Swing.DIRECTION.RIGHT ? 'THUMBS_UP' : 'THUMBS_DOWN'}}`\n    )).join(',');\n\n    const query = `{ recommendedJobs(ratings:[${ratings}]) { jobId headline companyName}}`;\n\n    console.log(query);\n    axios.post('https://unsettler.azurewebsites.net/graphql', { query }).then((response) => {\n      const recommendedJobs = response.data.data.recommendedJobs;\n      if (firstLoad) {\n        recommendedJobs.push({ jobId: 'WELCOME', headline: 'Jobstack', companyName: 'Hitta och nå ditt drömyrke genom att swipa höger och vänster.... ' });\n      }\n      this.setState({\n        stack: recommendedJobs,\n        firstLoad: false,\n      });\n    }, (error) => {\n      console.error(error);\n    });\n  }\n\n  onThrowout = (e) => {\n    const { stack, thrownCards } = this.state;\n    const stackCopy = [...stack];\n\n    const index = stackCopy.map(vacancy => vacancy.jobId).indexOf(e.target.id);\n\n    if (index !== -1) {\n      stackCopy.splice(index, 1);\n      this.setState({ stack: stackCopy });\n      this.setState(prevState => ({\n        thrownCards: [...prevState.thrownCards,\n          { vacancy: stack[index], direction: e.throwDirection }],\n      }));\n    }\n\n    if (thrownCards.length >= NUM_CARDS_UNTIL_RESULT) {\n      this.getEducationRecommendation();\n      return;\n    }\n\n    if (stackCopy.length <= 0) {\n      this.getNewVacations();\n    }\n  }\n\n  render() {\n    const { stack, education } = this.state;\n    console.log(stack);\n\n    if (education) {\n      const url = `https://www.arbetsformedlingen.se/For-arbetssokande/Stod-och-ersattning/Sok-arbetsmarknadsutbildningar.html?cmd=visa&utbildningId=${education.courseId}`;\n      return (\n        <div>\n          <span className=\"db sans-serif f4 tc white tc\"> Vi rekommenderar denna utbilning</span>\n          <span className=\"db white tc sans-serif f2 b mt4\">{education.headline}</span>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"db tc sans-serif b mt4 white\"\n            href={url}\n          >\n            Läs mer\n          </a>\n          <div className=\"tc mt5\">\n            <a\n              href=\"/\"\n              className=\" button ph4 pv2 bg-white af-blue br3 link dim sans-serif b f4 pointer\"\n            >\n              Börja om\n            </a>\n          </div>\n        </div>\n      );\n    }\n    if (!stack.length) {\n      return <p className=\"tc sans-serif f3 b white\"> loading</p>;\n    }\n    return (\n      <div>\n\n        {\n        stack.length && (\n        <Swing\n          className=\"relative center\"\n          throwout={this.onThrowout}\n          config={{\n            throwOutConfidence: (xOffset, yOffset, element) => {\n              const xConfidence = Math.min(Math.abs(xOffset) / element.offsetWidth\n                   + THROW_SENSITIVITY, 1);\n              const yConfidence = Math.min(Math.abs(yOffset) / element.offsetHeight\n                   + THROW_SENSITIVITY, 1);\n\n              return Math.max(xConfidence, yConfidence);\n            },\n          }}\n        >\n          {\n                stack.map(vacancy => (\n                  vacancy.jobId !== 'WELCOME'\n                    ? (\n                      <div\n                        id={vacancy.jobId}\n                        className=\"absolute relative min-height-card w-100 ba br4 bw3 b--af-green bg-light-gray pv6 ph4\"\n                        key={vacancy.jobId}\n                      >\n                        <span className=\"db f3 sans-serif\">\n                          {vacancy.headline}\n                        </span>\n                        <span className=\"db f4 sans-serif\">\n                          {vacancy.companyName}\n                        </span>\n                        <div className=\"absolute bottom-0 left-0 w-100 f1 pa3 \">\n                          <span className=\"fl\" role=\"img\" aria-label=\"Thumbs down fr\">&#128078;</span>\n                          <span className=\"fr\" role=\"img\" aria-label=\"Thumbs up fl\">&#128077;</span>\n                        </div>\n                      </div>\n                    )\n                    : (\n                      <div\n                        id={vacancy.jobId}\n                        className=\"absolute relative min-height-card w-100 ba br4 bw3 b--af-green bg-light-gray pv6 ph4\"\n                        key={vacancy.jobId}\n                      >\n                        <span className=\"db tc f2 b sans-serif\">\n                          {vacancy.headline}\n                        </span>\n                        <span className=\"db f4 lh-copy mt2 sans-serif\">\n                          {'Välj de yrken som intresserar dig och få förslag på utbildningar som hjälper dig till drömjobbet'}\n                          <span className=\"db b tc mt3\">Swipea höger eller vänster</span>\n                        </span>\n                        <div className=\"absolute bottom-0 left-0 w-100 f1 pa3 \">\n                          <span className=\"fl\" role=\"img\" aria-label=\"Thumbs up\">&#128077;</span>\n                          <span className=\"fr\" role=\"img\" aria-label=\"Thumbs up\">&#128077;</span>\n                        </div>\n                      </div>\n                    )\n                ))\n            }\n        </Swing>\n        )\n\n      }\n      </div>\n    );\n  }\n}\n\nStack.propTypes = {\n};\n","import React, { Component } from 'react';\n\nimport Stack from './Stack';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"pa3 mt2  mw6 center h-100\">\n        <Stack onThrowout={this.onThrowout} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport AppComponent from './components/App'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" exact component={AppComponent}/>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}